<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0??EN"
        "https://mybatis.org.dtd/mybatis-3-mapper.dtd">
<mapper namespace="PublisherMapper">
    <resultMap id="empResultMap" type="com.ohgiraffers.practices.model.PublisherDTO0524">
        <!-- 9. java에서 임의로 정한 변수명과 실제 DB에서의 컬럼명을 매핑시키기 위한 설정-->
        <!-- type = DTO로 하는 이유? : getter, setter로 (임의변수명과 연결된) DB값을 갖고 오기 위해-->
        <id property="empId" column="EMP_ID"/>
        <!-- 식별자 칼럼 불러올 때는 <id/> 사용-->
        <!-- 나머지 일반 컬럼들도 <result />로 전부 불러온다-->
        <result property="empName" column="EMP_NAME"/>
        <!-- 20. property="name"이었던 거 "empName"으로 고쳤더니 일단 전체 사원 목록은 뜬다!!-->
        <result property="email" column="EMAIL"/>
        <result property="deptCode" column="DEPT_CODE"/>
        <result property="salary" column="SALARY"/>
        <result property="hireDate" column="HIRE_DATE"/>
    </resultMap>

    <!-- 10. Run class에 있는 swtich문 복사해와서 select의 id와 resultMap 만들어준다-->
    <select id="readAllEmp" resultMap="empResultMap">
        SELECT *
        FROM EMPLOYEE_LIST
        ORDER BY EMP_ID
    </select>

    <select id="readEmpByDept" resultMap="empResultMap">
        SELECT A.EMP_ID,
        A.EMP_NAME,
        A.EMAIL,
        B.DEPT_TITLE,
        A.SALARY,
        A.HIRE_DATE
        FROM EMPLOYEE_LIST A
        JOIN EMPLOYEE_DEPT B ON A.DEPT_CODE = B.DEPT_ID
        WHERE A.DEPT_CODE = #{code}
        ORDER BY A.EMP_ID
    </select>

    <select id="readEmpById" parameterType="_int" resultMap="empResultMap">
        <!--29. readEmpByI'D' 오타 때문에 자꾸 오류가 난 거 였음. 고침-->
        SELECT *
        FROM EMPLOYEE_LIST
        <!--28.WHERE 없는 걸 발견. 추가-->
        WHERE EMP_ID = #{empId}
        ORDER BY EMP_ID
        <!-- 39. employee-dept table 내 DEPT_ID랑 DEPT_CODE JOIN해서 DEPT_CODE 대신 DEPT_TITLE 나오게 하고 싶었는데
        deptCode='null'이라고 자꾸 떠서, 이유를 생각해보니 DTO에서 deptTitle를 출력할 수 있는 메소드를 만들어준 적이 없음.
        readEmpById 내 JOIN 되어있던 걸 삭제해줌 -->
    </select>

    <insert id="createNewEmp" parameterType="com.ohgiraffers.practices.model.PublisherDTO0524">
        INSERT INTO EMPLOYEE_LIST
        (
        EMP_ID,
        EMP_NAME,
        EMAIL,
        DEPT_CODE,
        SALARY,
        HIRE_DATE
        )
        VALUES
        (
        #{ empId },
        #{ empName },
        <!--35. The error may exist in publisher-mapper.xml
        >>> #{ name }에서 #{ empName }으로 수정-->
        #{ email },
        #{ deptCode },
        #{ salary },
        #{ hireDate }
        <!--36.There is no getter for property named 'hiredDate' in 'class com.ohgiraffers.practices.model.PublisherDTO0524'
        DTO에 써있는 hireDate가 더 많아서 DTO 필드명과 동일하게 #{ hiredDate }에서 #{ hireDate }로 이름 변경-->
        )
    </insert>

    <update id="updateEmpInfo" parameterType="com.ohgiraffers.practices.model.PublisherDTO0524">
        UPDATE EMPLOYEE_LIST
        SET
        EMP_NAME = #{ empName },
<!--38. There is no getter for property named 'name' in 'class com.ohgiraffers.practices.model.PublisherDTO0524'
 The error may exist in publisher-mapper.xml
 EMP_NAME = #{ name }을  EMP_NAME = #{ empName }로 수정 -->
        DEPT_CODE = #{ deptCode },
        SALARY = #{ salary }
        WHERE EMP_ID = #{ empId }
    </update>

    <delete id="deleteEmpInfo" parameterType="com.ohgiraffers.practices.model.PublisherDTO0524">
        DELETE
        FROM EMPLOYEE_LIST
        WHERE EMP_ID = #{ empId }
    </delete>
</mapper>
